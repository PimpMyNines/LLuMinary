# LLuMinary - A versatile interface for illuminating the path to multiple LLM providers
# Maintained by PimpMyNines - info@pimpmynines.com

[build-system]
requires = ["setuptools>=61.0.0", "wheel>=0.37.0", "build>=0.8.0"]
build-backend = "setuptools.build_meta"

[project]
name = "lluminary"
dynamic = ["version"]
description = "A versatile interface for illuminating the path to multiple LLM providers"
readme = "README.md"
authors = [
    {name = "PimpMyNines", email = "info@pimpmynines.com"},
    {name = "Chase Brown", email = "chasealexbrown@gmail.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing",
    "Topic :: Utilities",
    "Operating System :: OS Independent",
    "Natural Language :: English",
    "Typing :: Typed",
    "Framework :: Pytest",
]
keywords = [
    "llm",
    "ai",
    "machine-learning",
    "nlp",
    "natural-language-processing",
    "openai",
    "anthropic",
    "claude",
    "gpt",
    "google",
    "gemini",
    "cohere",
    "aws",
    "bedrock",
    "embeddings",
    "classification",
    "reranking",
    "image-generation",
    "function-calling",
    "tools"
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.31.0",
    "anthropic>=0.18.0",
    "openai>=1.12.0",
    "Pillow>=10.0.0",
    "google-genai>=1.0.0",
    "httpx>=0.26.0",
    "pydantic>=2.0.0",
    "tenacity>=8.0.0",
    "click>=8.0.0",
    "pyyaml>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.5.0",
    "responses>=0.25.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "ruff>=0.0.100",
    "pre-commit>=3.0.0",
    "build>=1.0.0",
    "twine>=4.0.0",
    "types-requests>=2.32.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.5.0",
    "responses>=0.25.0",
]
lint = [
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "ruff>=0.0.100",
    "pre-commit>=3.0.0",
    "types-requests>=2.32.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=2.0.0",
]
aws = [
    "boto3>=1.34.0",
]
all = [
    "boto3>=1.34.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.5.0",
    "responses>=0.25.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "ruff>=0.0.100",
    "pre-commit>=3.0.0",
    "build>=1.0.0",
    "twine>=4.0.0",
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=2.0.0",
    "types-requests>=2.32.0",
]

[project.urls]
Homepage = "https://github.com/PimpMyNines/LLuMinary"
Documentation = "https://pimpmy9s.github.io/LLuMinary/"
"Source Code" = "https://github.com/PimpMyNines/LLuMinary"
Repository = "https://github.com/PimpMyNines/LLuMinary.git"
Issues = "https://github.com/PimpMyNines/LLuMinary/issues"
Changelog = "https://github.com/PimpMyNines/LLuMinary/blob/main/CHANGELOG.md"
"Bug Tracker" = "https://github.com/PimpMyNines/LLuMinary/issues"

[project.scripts]
lluminary-classify = "lluminary.cli.classify:cli"

[tool.setuptools]
packages = {find = {where = ["src"]}}
package-dir = {"" = "src"}
include-package-data = true

[tool.setuptools.dynamic]
version = {attr = "lluminary.version.__version__"}

[tool.setuptools.package-data]
lluminary = ["py.typed", "**/*.yaml", "**/*.json"]

[tool.black]
line-length = 88
target-version = ["py38"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "--cov=lluminary --cov-report=term-missing --cov-report=xml"

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = ["E", "F", "B", "I", "W", "C4", "UP", "N", "ANN", "SIM", "RUF"]
ignore = ["ANN101", "ANN102", "ANN002", "ANN003"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["ANN"]
"debug/**/*.py" = ["E501", "ANN", "I", "B"]
"examples/**/*.py" = ["E501"]
"docs/development/**/*.py" = ["E501", "ANN", "I", "B", "F", "RUF"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.coverage.run]
source = ["lluminary"]
omit = ["tests/*", "debug/*", "examples/*", "docs/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "pass"
]
show_missing = true
