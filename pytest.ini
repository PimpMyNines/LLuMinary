[pytest]
# Test Discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output Configuration
addopts =
    --verbose
    --showlocals
    --tb=short
    --color=yes
    -p no:warnings
    --durations=3
    --maxfail=3
    -r fEX
    --no-header
    --no-summary
    --tb=line
    --disable-warnings
    --show-capture=no
    --cov=lluminary
    --cov-report=term-missing
    --cov-report=xml

# Console Output
console_output_style = progress

# Logging
log_cli = true
log_cli_level = ERROR
log_cli_format = %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %H:%M:%S

# Test Categories
markers =
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    slow: marks tests as slow (taking more than 1s)
    image: marks tests that handle image input processing
    image_generation: marks tests that handle image generation
    api: marks tests that make external API calls
    classification: marks tests related to classification functionality
    tools: marks tests related to tool registry functionality
    cli: marks tests related to CLI functionality
    cross_provider: marks tests that verify behavior across providers
    streaming: marks tests related to streaming functionality
    cost: marks tests related to cost tracking
    rate_limiting: marks tests related to rate limiting behavior
    provider_errors: marks tests for provider-specific error handling
    dynamic_model_selection: marks tests for dynamic model selection functionality
    optional_parameters: marks tests for provider-specific optional parameters

# Failure Handling
filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning
    ignore::RuntimeWarning

# Performance
minversion = 6.0
required_plugins = pytest-cov pytest-asyncio pytest-xdist
timeout = 30

# Asyncio Configuration
asyncio_default_fixture_loop_scope = function
